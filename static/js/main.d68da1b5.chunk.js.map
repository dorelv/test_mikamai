{"version":3,"sources":["Nav.js","pages/Linguaggi.js","pages/Frameworks.js","pages/Stili.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","navStyle","color","className","style","to","useStyles","makeStyles","theme","containter","alignItems","display","flex","justifyContent","margin","spacing","flexDirection","labelStyle","marginLeft","Esercizio1","memo","input_val","Typography","variant","Esercizio2","swapped_val","replace","split","map","sep","limit","toUpperCase","toLocaleLowerCase","join","Esercizio3","shift_val","to_str","charCodeAt","test","String","fromCharCode","toLowerCase","Esercizio4","counted_obj","reduce","totObj","singleLetter","JSON","stringify","Esercizio5","obiettivo","is_present","includes","Linguaggi","classes","useState","setinput_val","Fragment","Container","maxWidth","TextField","id","label","placeholder","value","onChange","upper_val","target","fullWidth","InputLabelProps","shrink","btnDone","backgroundColor","marginTop","formControl","padding","card","height","cardContent","SingleItem","item","onClick","Box","FormControlLabel","control","Checkbox","checked","disabled","verificato","Button","ToggleCheck","sel_desel","FilterList","filter_value","FormControl","InputLabel","Select","autoWidth","displayEmpty","MenuItem","Frameworks","listItems","setListItems","toggleAll","setToggleAll","undefined","filtriAttivi","setFiltriAttivi","useEffect","isAllChecked","Object","values","every","setItemChecked","filtro","setDone","forEach","event","index","length","nuovo_item","createMuiTheme","breakpoints","xs","sm","md","lg","xl","cardGrid","minHeight","cards","text","Stili","Grid","container","Card","CardContent","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d68da1b5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./cssStyles/App.css\";\nimport {Link} from 'react-router-dom'\n\nexport default function Nav(){\n\n    const navStyle = {\n        color: '#fff',\n        \n    }\n\n    return (\n    <nav className='nav'>\n        <ul className='nav-Links'>\n            <Link style={navStyle} to='/linguaggi'>\n                <h3>Linguaggi</h3>\n            </Link>\n            <Link style={navStyle} to='/frameworks'>\n                <h3>Frameworks</h3>\n            </Link>\n            <Link style={navStyle} to='/stili'>\n                <h3>Markup and Stylesheets</h3>\n            </Link>\n        </ul>\n    </nav>\n    );\n}\n\n","import React, { useState, memo } from \"react\";\n\nimport { TextField, Typography, Container, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n\n  containter: {\n    alignItems: 'flex-start', \n    display: 'flex',\n    flex: 1,\n    justifyContent: 'flex-start',\n    margin: theme.spacing(1),\n    flexDirection: 'column'\n  },\n\n  labelStyle: {\n    marginLeft: theme.spacing(1),\n  }\n\n}));\n///////////////////////////////////////////qui verifico se i valori sono delle lettere\n\nconst verificaReg = (val) => {\n\n  var my_reg  = /[^a-z]/gi; \n  var is_valid = !(my_reg.test(val))\n\n  return is_valid\n\n}\n\n/////////////////////////////////////////Esercizio 1\n\nexport const Esercizio1 = memo(({input_val}) => {\n\n  return(\n\n    <Typography className={useStyles().labelStyle} variant=\"body2\">\n      Esercizio 1: {input_val}\n    </Typography>\n\n  )\n})\n\n/////////////////////////////////////////Esercizio 2\n\nexport const Esercizio2 = ({input_val}) => {\n  \n  input_val = input_val.replace(/[\\W_]+/g, \" \") ////qui rimpiazzo i caratteri speciali e i doppi spazzi con uno solo per non perdere il conto delle disparità\n  \n  const swapped_val = input_val.split(' ').map(\n    (sep, limit) => \n    \n      limit % 2 ?\n\n        sep.toUpperCase()\n       \n      :\n      \n        sep.toLocaleLowerCase()\n    \n    ).join(' ')\n   \n  return(\n    <Typography className={useStyles().labelStyle} variant=\"body2\">\n    Esercizio 2: {swapped_val}\n    </Typography>\n\n  )\n}\n\n/////////////////////////////////////////Esercizio 3\n\nexport const Esercizio3 = memo(({input_val}) => {\n\n  var shift_val = input_val.split('').map((sep) => {\n\n    var to_str = sep.charCodeAt(0) === 90 ? 65 : sep.charCodeAt(0) + 1 ///qui verifico che se l'ultima lettera è la Z mi ritorna la lettera A\n    var val_return = verificaReg(sep) ? String.fromCharCode(to_str) : sep\n\n    return val_return.toLowerCase()\n\n  }).join('') \n\n  return(\n    <Typography className={useStyles().labelStyle} variant=\"body2\">\n    Esercizio 3: {shift_val}\n    </Typography>\n\n  )\n})\n\n/////////////////////////////////////////Esercizio 4\n\nexport const Esercizio4 = memo(({input_val}) => {\n\n  input_val = input_val.replace(/[\\W_]+/g, \"\").toLowerCase()\n\n  let counted_obj =  input_val.split('').reduce((totObj, singleLetter) => {  \n      totObj[singleLetter] ? totObj[singleLetter]++ : totObj[singleLetter] = 1;\n      return totObj;\n  }, {});\n  \n  return(\n    <Typography className={useStyles().labelStyle} variant=\"body2\">\n    Esercizio 4: {JSON.stringify(counted_obj)}\n    </Typography>\n\n  )\n})\n\n////////////////////////////////////////////Esercizio 5\n\n  export const Esercizio5 = memo(({input_val, obiettivo})=> {\n\n  const is_present = input_val.toLowerCase().includes(obiettivo.toLowerCase())\n\n  return(\n\n    <Typography className={useStyles().labelStyle} variant=\"body2\">\n    Esercizio 5 (valore da verificare \"{obiettivo}\"): {JSON.stringify(is_present)}\n    </Typography>\n\n  )\n\n   \n\n})\n\nexport default function Linguaggi(){\n\n  const classes = useStyles();\n\n  const [input_val, setinput_val] = useState('')\n\n  const uppercase = ({target}) => {\n    const upper_val = target.value.toUpperCase() \n    setinput_val(upper_val)\n  }\n\n\n  return (\n\n    <React.Fragment>\n\n    <Container className={classes.containter} maxWidth=\"md\" >\n\n      <TextField\n          id=\"outlined-full-width\"\n          label=\"Javascript functional\"\n          style={{ margin: 8 }}\n          placeholder=\"Stringa da elaborare\"\n          value={input_val.toLowerCase()}\n          onChange={uppercase}\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n        />\n\n        <Esercizio1 input_val={input_val}/>\n        <Esercizio2 input_val={input_val}/>\n        <Esercizio3 input_val={input_val}/>\n        <Esercizio4 input_val={input_val}/>\n        <Esercizio5 input_val={input_val} obiettivo={'a'}/>  \n\n    </Container>\n\n  </React.Fragment>\n\n  );\n}","import React, { useState, memo, useEffect } from \"react\";\nimport \"../cssStyles/Frameworks.scss\";\nimport { Checkbox, Button, Select, FormControl, InputLabel, MenuItem, Box, Container, makeStyles, FormControlLabel } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n \n  containter: {\n    alignItems: 'flex-start', \n    display: 'flex',\n    flex: 1,\n    justifyContent: 'flex-start',\n    margin: theme.spacing(1),\n    flexDirection: 'column'\n  },\n\n  btnDone: {\n    backgroundColor: '#607d8b',\n    color: '#ffffff',\n    marginTop: theme.spacing(1),\n  },\n\n  formControl: {\n    padding: theme.spacing(1),\n    //minWidth: 120,\n  },\n  \n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n   \n  },\n  cardContent: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'space-between',\n    flexDirection: 'column',\n    alignItems: 'center', \n  },\n\n}));\n\n///////////////////////////////////oggetto dato\n\nconst getData = () => {\n\n  const myCheckList = {\n    \"id\": \"list-uuid-1\",\n    \"name\": \"My list name\",\n    \"items\": [\n      { \"id\": \"uuid-1\", label: \"item 1\", value: true },\n      { \"id\": \"uuid-2\", label: \"item 2\", value: false },\n      { \"id\": \"uuid-3\", label: \"item 3\", value: true }\n    ]\n  }\n\n  return myCheckList\n\n}\n\n///////////////////////////////////render del singolo item\n\nexport const SingleItem = memo(({item, onChange, onClick}) => {\n\n  return(\n\n    <Box>\n\n      <FormControlLabel\n      control={<Checkbox checked={item.value} onChange={onChange} disabled={item.verificato}  />}\n      label={item.label}\n      />\n\n      <Button style={{color: item.verificato ? '#4caf50' : '#f44336'}} onClick={onClick}>\n        {item.verificato ? 'Toggle' : 'Done'}\n      </Button>\n\n    </Box>\n    \n    /*<label className='single-item' >\n      {item.label} \n      <input type='checkbox' checked={item.value} onChange={onChange} disabled={item.verificato} />\n      <button className={item.verificato ? 'verificato' : 'nonVerificato'} onClick={onClick} >Toggle Done</button>\n    </label>*/\n    \n  )\n})\n\n///////////////////////////////////render del seleziona/deseleziona tutto\n\nexport const ToggleCheck = memo(({ sel_desel, onChange})=> {\n\n  return(\n\n    <FormControlLabel\n    control={<Checkbox checked={sel_desel} onChange={onChange}  />}\n    label=\"Toggle All\"\n    />\n    /*<label>\n      Toggle All\n      <input type='checkbox' checked={sel_desel} onChange={onChange}/>\n    </label>*/\n  )\n\n})\n\n///////////////////////////////////filtro\n\nexport const FilterList = memo(({ filter_value , onChange}) => {\n\n  return(\n\n    <FormControl className={useStyles().formControl}>\n    <InputLabel id=\"demo-simple-select-autowidth-label\">Filtra</InputLabel>\n    <Select\n      value={filter_value ? filter_value : 'tutti'}\n      onChange={onChange}\n      autoWidth\n      displayEmpty\n    >\n      <MenuItem value={'tutti'}>Tutti</MenuItem>\n      <MenuItem value={'soloOrig'}>Solo originali</MenuItem>\n      <MenuItem value={'nuovi'}>Nuovi</MenuItem>\n      <MenuItem value={'selezionati'}>Selezionati</MenuItem>\n      <MenuItem value={'nonSel'}>Non selezionati</MenuItem>\n      <MenuItem value={'completati'}>Completati</MenuItem>\n    </Select>\n    </FormControl>\n   \n      /*<select onChange={onChange} value={filter_value ? filter_value : 'tutti'}>\n        <option value=\"tutti\">Tutti</option>\n        <option value=\"soloOrig\">Solo Originali</option>\n        <option value=\"nuovi\">Nuovi</option>\n        <option value=\"selezionati\">Selezionati</option>\n        <option value=\"nonSel\">Non Selezionati</option>\n        <option value=\"completati\">Completati</option>\n      </select>*/\n      \n  )\n})\n\nexport default function Frameworks(){\n\n  const classes = useStyles();\n\n  ///////////////////////////dichiaro gli stati\n  const [listItems, setListItems] = useState([])\n  const [toggleAll, setToggleAll] = useState(false)\n  const [filtriAttivi, setFiltriAttivi] = useState(undefined)\n  /////////////////////////richiamo le funzioni di react\n  useEffect(()=> {\n    setListItems(getData().items)\n  },[])\n\n  useEffect(()=> {\n\n    const isAllChecked =Object.values(listItems)\n    .every(item => item.value === true )\n\n    isAllChecked ? setToggleAll(true): setToggleAll(false)\n\n  },[listItems])\n\n  ////////////////////////////////qui cambio lo stato dell'item checked/not checked\n  const setItemChecked = (item) => {\n\n    item.value = !item.value \n\n    filtriAttivi === 'tutti' || filtriAttivi === 'soloOrig' || filtriAttivi === 'nuovi' ?\n\n      item.filtro = item.value ? 'selezionati' : 'nonSel'\n\n    : \n \n      item.filtro = undefined\n    \n    setListItems([...listItems])\n  }\n\n  ////////////////////////////////qui cambio lo stato dell'oggetto nella lista in verificato\n  const setDone = (item) => {\n    \n    item.verificato === undefined ? item.verificato = true : item.verificato = !item.verificato  \n    \n    filtriAttivi === 'completati' ?\n\n      item.filtro = item.verificato ? 'completati' : undefined\n    :\n      item.filtro = item.verificato ? 'completati' : item.value ? 'selezionati' : 'nonSel'  \n    \n    setListItems([...listItems])\n \n  }\n\n  ///////////////////////////////qui setto tutti gli'item selezionati/non selezionati\n  const toggleItems = () => {\n\n    listItems.forEach((item) => {\n      \n      delete item.filtro\n      setFiltriAttivi(undefined) //qui setto i filtri su 'tutti' data l'aggiunta di un nuovo item\n\n      item.value = !toggleAll\n\n    })\n\n    setToggleAll(!toggleAll)\n\n  }\n\n  ////////////////////////////////qui aggiuno elementi nella lista\n  const aggiungiItem = () => {\n\n    const nuovo_item = { \"id\": `uuid-${listItems.length + 1}`, label: `item ${listItems.length + 1}`, value: true, filtro: '' }\n\n    filtriAttivi ? nuovo_item.filtro = filtriAttivi : delete nuovo_item.filtro\n\n    setListItems([...listItems, nuovo_item])\n\n  }\n\n  ////////////////////////////////qui gestisco i filtri\n  const addFilter = (event) => {\n    \n    listItems.forEach((item, index)=> {\n\n      delete item.filtro\n\n      switch(event.target.value){\n\n        case 'tutti': { \n          item.filtro = 'tutti'\n          break;\n        }\n\n        case 'soloOrig': {\n          if(index < getData().items.length){\n            item.filtro = 'soloOrig'\n          }\n          break;\n        }\n        case 'nuovi': {\n          if(index >= getData().items.length){\n            item.filtro = 'nuovi'\n          }\n          break;\n        }\n        case 'selezionati': {\n          if(item.value){\n            item.filtro = 'selezionati'\n          } \n          break;\n        }\n        case 'nonSel': {\n          if(!item.value){\n            item.filtro = 'nonSel'\n          }\n          break;\n        }\n        case 'completati': {\n          if(item.verificato){\n            item.filtro = 'completati'\n          }\n          break;\n        }\n\n        default: item.filtro = 'tutti'\n        \n      }\n\n    })\n\n    setFiltriAttivi(event.target.value)\n    setListItems([...listItems])\n\n  }\n\n  ////////////////////////////////qui renderizzo la lista\n  const renderItems = (item) => {\n\n    return(\n\n      !filtriAttivi ?\n\n        <SingleItem key={item.id} item={item} onChange={()=> setItemChecked(item)} onClick={()=> setDone(item)}/>\n\n      :\n\n      item.filtro ?\n      \n        <SingleItem key={item.id} item={item} onChange={()=> setItemChecked(item)} onClick={()=> setDone(item)}/>\n\n      : null\n  \n    )\n  \n  }\n\n  return (\n\n    <React.Fragment>\n\n      <Container className={classes.containter} maxWidth=\"md\" >\n\n        <ToggleCheck sel_desel={toggleAll} onChange={toggleItems}/>\n\n        {listItems.map(renderItems)}\n\n        <FilterList filter_value={filtriAttivi} onChange={addFilter}/>\n\n        <Button \n        variant=\"contained\" \n        className={classes.btnDone}\n        disabled={filtriAttivi === 'nonSel' || filtriAttivi === 'completati' ? true : false}\n        onClick={aggiungiItem}>\n          Aggiungi item \n        </Button>\n\n      </Container>\n\n    </React.Fragment>\n    /*<div className=\"Frameworks\">\n\n      <ToggleCheck sel_desel={toggleAll} onChange={toggleItems}/>\n   \n      {listItems.map(renderItems)}\n\n      <FilterList filter_value={filtriAttivi} onChange={addFilter}/>\n\n      <button disabled={filtriAttivi === 'nonSel' || filtriAttivi === 'completati' ? true : false} onClick={aggiungiItem}>Aggiungi item {filtriAttivi}</button>\n     \n    </div>*/\n  );\n}\n\n\n\n","\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst theme = createMuiTheme({\n    breakpoints: {\n      values: {\n        xs: 0,\n        sm: 640,\n        md: 960,\n        lg: 1280,\n        xl: 1920,\n      },\n    },\n})\n\nconst useStyles = makeStyles((theme) => ({\n \n  cardGrid: {\n    minHeight: '100vh',\n    alignItems: 'center', \n    display: 'flex',\n    flex: 1\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n   \n  },\n  cardContent: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'space-between',\n    flexDirection: 'column',\n    alignItems: 'center', \n  },\n\n}));\n\nconst cards = [\n\n    {id: 1, text: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\"},\n    {id: 2, text: \"It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. And more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"},\n    {id: 3, text: \"It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"},\n    {id: 4, text: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"},\n];\n\nexport default function Stili() {\n  const classes = useStyles();\n\n  return (\n  \n    <React.Fragment>\n\n        <Container className={classes.cardGrid} maxWidth=\"md\"  >\n         \n          <Grid container spacing={2}>\n            {cards.map((card) => (\n                <MuiThemeProvider key={card.id} theme={theme}>\n                    <Grid item key={card} xs={12} sm={(cards.length % 2) ? 4:6} md={(cards.length % 2) ? 4:3} >\n                        <Card className={classes.card}>\n                    \n                            <CardContent className={classes.cardContent} >\n                                <Typography>\n                                {card.text}\n                                </Typography>\n\n                                <Typography variant=\"body2\">\n                                This stay at the bottom\n                                </Typography>\n                            </CardContent>\n\n                        </Card>\n                    </Grid>\n              </MuiThemeProvider>\n            ))}\n          </Grid>\n        </Container>\n\n    </React.Fragment>\n  );\n}\n\n\n\n","import React from \"react\";\nimport \"./cssStyles/App.css\";\nimport Nav from './Nav'\nimport Linguaggi from './pages/Linguaggi'\nimport Frameworks from './pages/Frameworks'\nimport Stili from './pages/Stili'\n\nimport {BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\n\nexport default function App(){\n\n  return (\n    <Router>   \n      <div className=\"App\">\n        <Nav />\n        <Switch>   \n          <Route exact path=\"/test_mikamai\" component={() => (<Redirect to='/linguaggi' />)} />\n          <Route path='/linguaggi' component={Linguaggi} />\n          <Route path='/frameworks' component={Frameworks} />\n          <Route path='/stili' component={Stili} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './cssStyles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}